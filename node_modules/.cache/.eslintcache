[{"/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/index.js":"1","/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/App.js":"2","/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/Login.js":"3","/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/Home.js":"4","/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/Post.js":"5","/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/Search.js":"6","/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/SignUp.js":"7","/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/View.js":"8","/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/ChangeAvatar.js":"9","/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/components/Rateandcomment.js":"10","/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/components/Bookcomments.js":"11","/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/components/Filter.js":"12","/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/components/SecondPageHome.js":"13","/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/components/Navbar.js":"14","/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/components/MainHome.js":"15","/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/components/ViewBook.js":"16","/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/components/ContentSearch.js":"17","/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/components/ImageWithFallback.js":"18","/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/components/HelpPage.js":"19"},{"size":258,"mtime":1683170635580,"results":"20","hashOfConfig":"21"},{"size":930,"mtime":1683187063091,"results":"22","hashOfConfig":"21"},{"size":1719,"mtime":1683170635570,"results":"23","hashOfConfig":"21"},{"size":324,"mtime":1683170635570,"results":"24","hashOfConfig":"21"},{"size":4457,"mtime":1683170635570,"results":"25","hashOfConfig":"21"},{"size":463,"mtime":1683170635570,"results":"26","hashOfConfig":"21"},{"size":1584,"mtime":1683170635570,"results":"27","hashOfConfig":"21"},{"size":611,"mtime":1683170635571,"results":"28","hashOfConfig":"21"},{"size":1648,"mtime":1683170635570,"results":"29","hashOfConfig":"21"},{"size":2540,"mtime":1683170635571,"results":"30","hashOfConfig":"21"},{"size":2756,"mtime":1683174057021,"results":"31","hashOfConfig":"21"},{"size":4249,"mtime":1683170635571,"results":"32","hashOfConfig":"21"},{"size":2174,"mtime":1683183508313,"results":"33","hashOfConfig":"21"},{"size":2793,"mtime":1683172195938,"results":"34","hashOfConfig":"21"},{"size":2244,"mtime":1683186088673,"results":"35","hashOfConfig":"21"},{"size":5402,"mtime":1683174581615,"results":"36","hashOfConfig":"21"},{"size":789,"mtime":1683174726404,"results":"37","hashOfConfig":"21"},{"size":531,"mtime":1683170635571,"results":"38","hashOfConfig":"21"},{"size":2224,"mtime":1683186994465,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"afdzxy",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"43"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"43"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"43"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"43"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"43"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/index.js",[],[],[],"/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/App.js",[],[],"/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/Login.js",["107"],[],"import React from 'react'\nimport { useRef } from 'react';\n\n\nfunction Login(){\n    const usernameRef = useRef('null');\n    const passwordRef = useRef('null');\n    async function handleLoginAccount(){\n        const username = usernameRef.current.value;\n        const password = passwordRef.current.value;\n        const response = await fetch('http://localhost:4000/login', {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                \n            },\n            body: JSON.stringify({\n                username: username,\n                password: password\n            })\n        })\n        const data = await response\n        if(data.status == 200){\n            window.location.href = \"/\"\n        }else{\n            alert('Username or Password is incorrect')\n        }\n    }\n    return(\n        // create a form for the user to login\n        <div id='loginPage'>\n            <div id='loginText'>Login</div>\n            <form id=\"loginForm\">\n                <label for=\"username\">Username</label>\n                <input ref={usernameRef} type=\"text\" name=\"username\" id=\"loginUsername\" placeholder=\"Username\" required></input>\n                <label for=\"password\">Password</label>\n                <input ref={passwordRef} type=\"password\" name=\"password\" id=\"loginPassword\" placeholder=\"Enter Password Here\" required></input>\n                <button id=\"loginBtn\" type=\"button\" onClick={handleLoginAccount}>Log in</button>\n                <a href=\"./signUp\" id='signupLink'>Don't have an account? Sign up here.</a>\n            </form>\n            <div id=\"copyrightDate\">2023</div>\n        </div>\n    )\n}\n\nexport default Login;","/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/Home.js",[],[],"/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/Post.js",[],[],"/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/Search.js",[],[],"/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/SignUp.js",["108","109"],[],"import React, { useRef, useState } from 'react'\n\n\nfunction SignUp(){\n    const userRef = useRef(null);\n    const passwordRef = useRef(null);\n    async function handleSignUp(){\n        const username = userRef.current.value;\n        const password = passwordRef.current.value;\n        const response = await fetch(`http://localhost:4000/signup`,  {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username,\n                password\n            })\n        })\n        console.log(response)\n        if (response.status != 200){\n            alert('User already exists');\n        }\n        else{\n            alert('User created');\n            window.location.href = '/login';\n        }\n    }\n    \n    return(\n        // create a form for the user to login\n        <div id='signupPage'>\n            <div class=\"header\">Create Account</div>\n            <form id=\"signupForm\">\n                <label for=\"username\">Username</label>\n                <input ref={userRef} type=\"text\" name=\"username\" id=\"signupUsername\" placeholder=\"Username\"></input>\n                <label for=\"password\">Password</label>\n                <input ref={passwordRef} type=\"password\" name=\"password\" id=\"signupPassword\" placeholder=\"Enter Password Here\"></input>\n                <button type=\"button\" onClick={handleSignUp}>Sign up</button>\n                <a href=\"./login\">Login</a>\n            </form>\n            <div id=\"copyrightDate\">2023</div>\n        </div>\n    )\n}\nexport default SignUp","/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/View.js",[],[],"/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/ChangeAvatar.js",[],[],"/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/components/Rateandcomment.js",["110"],[],"import React, { useState, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction Rateandcomment() {\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n  const commentRef = useRef();\n\n  const location = useLocation();\n  const qP = new URLSearchParams(location.search);\n  const BookID = qP.get('BookID');\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault(); // prevent form submission and page reload\n    userCheck();\n  };\n\n  const handleStarClick = (e) => {\n    const newRating = parseInt(e.currentTarget.dataset.value, 10);\n    setRating(newRating);\n  };\n  const handleCommentChange = (e) => {\n    setComment(e.target.value);\n  };\n\n\n    \n\n  async function userCheck(){\n    fetch(\"http://localhost:4000/rateandcomment\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ rating: rating, comment: comment, bookId: BookID }),\n    }).then(response =>{\n      if (response.status == 404){\n        window.location.href = '/login';\n      }\n    })\n    setRating(0);\n    commentRef.current.value = '';\n    window.location.reload();\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"card mb-3\">\n        <div className=\"card-body\">\n          <h4 className=\"card-title\">Rate and Comment on the Book</h4>\n          <form onSubmit={handleSubmit}>\n            <div className=\"rating\">\n              {Array.from({ length: 5 }, (_, index) => (\n                <span\n                  key={index}\n                  className={`star ${index + 1 <= rating ? \"selected\" : \"\"}`}\n                  data-value={index + 1}\n                  onClick={handleStarClick}\n                >\n                  <i className={`bi ${index + 1 <= rating ? \"bi-star-fill\" : \"bi-star\"}`}></i>\n                </span>\n              ))}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"comment\">Comment</label>\n              <textarea\n                className=\"form-control\"\n                id=\"comment\"\n                rows=\"3\"\n                onChange={handleCommentChange}\n                ref={commentRef}\n              ></textarea>\n            </div>\n            {/* <button type=\"submit\" className=\"btn btn-primary\" onClick={userCheck}> */}\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Rateandcomment;\n","/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/components/Bookcomments.js",["111","112"],[],"import React, { useState, useEffect, useCallback } from 'react';\nimport ImageWithFallback from \"./ImageWithFallback\";\n\nfunction Bookcomments({ bookId }) {\n  const [comments, setComments] = useState([]);\n  const [avatar, setAvatar] = useState('')\n\n  const fetchComments = useCallback(async () => {\n    const response = await fetch(`http://localhost:4000/getCommentInfo/${bookId}`);\n    const data = await response.json();\n    console.log(data);\n    setComments(data);\n  }, [bookId]);\n  \n  useEffect(() => {\n    // Call fetchComments initially to fetch comments on mount\n    fetchComments();\n\n    // Set an interval to call fetchComments every second\n    const intervalId = setInterval(fetchComments, 1000);\n    \n    // Cleanup function to clear interval on unmount\n    return () => clearInterval(intervalId);\n  }, [fetchComments]);\n  \n  const fallbackImageUrl = \"https://cdn-icons-png.flaticon.com/512/149/149071.png\"\n  return (\n    <div>\n      {comments.map((comment) => (\n        <div key={comment.id} className=\"container\">\n          <div className=\"card mb-3\">\n            <div className=\"row g-0 align-items-center\">\n              <div className=\"col-md-2 text-center\">\n                {/* <img\n                  src=\"https://cdn-icons-png.flaticon.com/512/149/149071.png\"\n                  className=\"img-fluid rounded-circle avatar\"\n                  alt=\"avatar\"\n                  style={{ width: '50%' }}\n                ></img> */}\n                <ImageWithFallback\n          inputImageUrl={comment.avatar}\n          fallbackImageUrl={fallbackImageUrl}\n          className=\"card card-img-top img-fluid rounded-circle avatar\"\n          style={{ marginTop: \"10px\", width: '50%', height: \"50%\", marginLeft: \"40px\" }}\n          alt=\"book cover\"\n          id=\"pfp-img\"\n        />\n\n\n              </div>\n              <div className=\"col-md-10\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">\n                    {comment.author}\n                    {console.log(comment)}\n                  </h5>\n                  <div className=\"form-group\">\n                    <div className=\"\">\n                      {[...Array(5)].map((_, index) => (\n                        <span key={index} className=\"star\" data-value={index + 1}>\n                          <i className={`bi ${index < comment.rating ? \"bi-star-fill\" : \"bi-star\"}`}></i>\n                        </span>\n                      ))}\n                    </div>\n                  </div>\n                  <p className=\"comment-text card-text\">\n                    {comment.comment}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Bookcomments;","/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/components/Filter.js",["113"],[],"import React, { useState, useEffect, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction Filter({ updateBooks }) {\n  const [authors, setAuthors] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:4000/getAuthors\")\n      .then((response) => response.json())\n      .then((data) => {\n        setAuthors(data);\n      });\n  }, []);\n\n  const authorRef = useRef(null);\n  const genreRef = useRef(null);\n  const yearRef = useRef(null);\n  const inputRef = useRef(null);\n  const location = useLocation();\n  const qP = new URLSearchParams(location.search);\n  const input = qP.get('input');\n\n  function filter() {\n    let author = authorRef.current.value;\n    let genre = genreRef.current.value;\n    let year = yearRef.current.value;\n    if (author === \"Author\") {\n      author = false;\n    }\n    if (genre === \"Genre\") {\n      genre = false;\n    }\n    if (year === \"Year\") {\n      year = false;\n    }\n    const formattedInput = inputRef.current.value.replaceAll(\" \", \"_\")\n    console.log(formattedInput)\n    const url = `http://localhost:4000/filter/${author}/${year}/${genre}/${formattedInput}`;\n    console.log(url)\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        updateBooks(data);\n      });\n  }\n\n  function filter2() {\n    const url = `http://localhost:4000/filter/${false}/${false}/${false}/${input}`;\n    console.log(url)\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        updateBooks(data);\n      });\n  }\n\n  // Call filter2() only once when the component is mounted\n  useEffect(() => {\n    filter2();\n  }, []);\n\n   \n  return (\n    <div id=\"filter\">\n      <form id=\"searchForm\" onSubmit={(e) => { e.preventDefault(); filter(); }}>\n        <div className=\"form-group d-flex\">\n          <input ref={inputRef} id=\"search-bar\" className=\"form-control  me-2 mx-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" required></input>\n          <button id=\"search-button\" className=\"btn btn-outline-success mx-2\" type=\"submit\">Search</button>\n        </div>\n        <div className=\"form-group d-flex my-4 mx-2 align-items-center\">\n          <label className=\"form-label\">Genre:</label>\n          <select ref={genreRef} className=\"form-select w-50 \" aria-label=\"Default select example\">\n          <option value=\"Genre\">Genre</option>\n          <option value=\"Fantasy\">Fantasy</option>\n          <option value=\"Romance\">Romance</option>\n          <option value=\"Mystery\">Mystery</option>\n          <option value=\"Science Fiction\">Science Fiction</option>\n          <option value=\"Horror\">Horror</option>\n          <option value=\"Thriller\">Thriller</option>\n          <option value=\"Historical Fiction\">Historical Fiction</option>\n          <option value=\"Nonfiction\">Nonfiction</option>\n          <option value=\"Young Adult\">Young Adult</option>\n          <option value=\"Biography\">Biography</option>\n          <option value=\"Comedy\">Comedy</option>\n          <option value=\"Drama\">Drama</option>\n          <option value=\"Action and Adventure\">Action and Adventure</option>\n          <option value=\"Crime and Detective\">Crime and Detective</option>\n          </select>\n        </div>\n        <div className=\"form-group d-flex my-4 mx-2 align-items-center\">\n          <label className=\"form-label\">Author:</label>\n          <select ref={authorRef}  className=\"form-select w-50 \" aria-label=\"Default select example\">\n            <option selected>Author</option>\n            {authors.map((author) => (\n              <option key={author} value={author}>\n                {author}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"form-group d-flex my-4 mx-2 align-items-center\">\n          <label className=\"form-label\">Year:</label>\n          <select ref={yearRef}  className=\"form-select w-50\" aria-label=\"Year\" menuPosition=\"fixed\">\n            <option>Year</option>\n            {Array.from({ length: new Date().getFullYear() - 1900 }, (_, index) => (\n              <option key={index}>{new Date().getFullYear() - index}</option>\n            ))}\n          </select>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Filter\n","/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/components/SecondPageHome.js",["114"],[],"/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/components/Navbar.js",["115"],[],"import React, { useRef, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ImageWithFallback from \"./ImageWithFallback\";\n\nfunction Navbar() {\n  const navBarReact = useRef(null); // create a ref using useRef hook\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [avatar, setAvatar] = useState(\"\");\n\n  function handleSearchInputChange() {\n    setSearchValue(navBarReact.current.value);\n  }\n\n  useEffect(() => {\n    fetch(\"http://localhost:4000/get/avatar\", {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      }\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log('printing avatar ' + avatar); \n        console.log('printing avatar ' + data.avatar); \n        setAvatar(data.avatar); \n        console.log('printing avatar ' + avatar); \n        console.log(data)})\n      .catch((err) => console.log(err));\n  }, []);\n\n  const fallbackImageUrl =\n    \"https://www.shareicon.net/data/512x512/2016/02/22/722964_button_512x512.png\";\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-md sticky-top bg-white m-0 py-0\">\n        <a href=\"/\">\n          <img\n            className=\"rounded d-block mx-4\"\n            alt=\"\"\n            id=\"logo-img\"\n            src={require(\"../images/photo_2023-04-13 23.51.37.jpeg\")}\n          />\n        </a>\n        <a className=\"navbar-brand\" href=\"/\">\n          Bookish\n        </a>\n        <form\n          className=\"d-flex mx-auto search \"\n          role=\"search\"\n          id=\"searchFormNavbar\"\n        >\n          <input\n            ref={navBarReact}\n            id=\"search-bar\"\n            className=\"form-control me-2 mx-2\"\n            type=\"search\"\n            placeholder=\"Search\"\n            aria-label=\"Search\"\n            onChange={handleSearchInputChange}\n          ></input>\n          <Link\n            id=\"search-button\"\n            className=\"btn btn-outline-success mx-auto\"\n            to={`/search?input=${searchValue}`}\n          >\n            Search\n          </Link>\n        </form>\n        <button\n          id=\"loginButton\"\n          onClick={() => {\n            window.location.href = \"/login\";\n          }}\n        >\n          <span>Log in</span>\n        </button>\n        <button\n          id=\"signupButton\"\n          onClick={() => {\n            window.location.href = \"/signup\";\n          }}\n        >\n          <span>Sign up</span>\n        </button>\n        {console.log(avatar)}\n        <ImageWithFallback\n          inputImageUrl={avatar}\n          fallbackImageUrl={fallbackImageUrl}\n          className=\"card card-img-top\"\n          style={{ marginTop: \"10px\" }}\n          alt=\"book cover\"\n          id=\"pfp-img\"\n        />\n      </nav>\n    </div>\n  );\n}\n\nexport default Navbar;","/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/components/MainHome.js",[],[],"/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/components/ViewBook.js",["116","117"],[],"import React, { useState, useEffect } from \"react\";\nimport Spinner from \"react-spinkit\";\nimport ImageWithFallback from \"./ImageWithFallback\"; \nfunction ViewBook(props) {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const renderStars = (rating) => {\n    let stars = [];\n    for (let i = 1; i <= 5; i++) {\n      stars.push(\n        <i\n          key={i}\n          className={`bi ${i <= rating ? \"bi-star-fill\" : \"bi-star\"}`}\n        ></i>\n      );\n    }\n    return stars;\n  }\n  useEffect(() => {\n    // Simulate an asynchronous operation\n    setTimeout(() => {\n      fetch(`http://127.0.0.1:4000/viewBookData/${props.BookID}`)\n        .then((response) => response.json())\n        .then((data) => {\n          setData(data);\n          setLoading(false);\n          console.log(data); // log the fetched data\n        })\n        .catch((error) => console.error(error));\n      \n    }, 1000);\n    setTimeout(() => {\n      fetch(`http://127.0.0.1:4000/viewBookData/${props.BookID}`)\n      .then((response) => response.json())\n      .then((data) => { \n        setData(data);\n        setLoading(false);\n        console.log(\"final Rating\" + data.finalRating);\n        renderStars(data.finalRating);\n         // log the fetched data\n        })\n     .catch((error) => console.error(error));\n     \n    }, 100);\n\n  }, [props.id]);\n  \n  \n  const fallbackImageUrl = \"https://img.freepik.com/free-photo/book-composition-with-open-book_23-2147690555.jpg\";\n  if (loading) {\n    return (\n      <div className=\"container\" style={{margin: \"100px auto\"}}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"200px\" width=\"200px\" viewBox=\"0 0 200 200\" class=\"pencil\">\n        <defs>\n          <clipPath id=\"pencil-eraser\">\n          <rect height=\"30\" width=\"30\" ry=\"5\" rx=\"5\"></rect>\n          </clipPath>\n        </defs>\n        <circle transform=\"rotate(-113,100,100)\" stroke-linecap=\"round\" stroke-dashoffset=\"439.82\" stroke-dasharray=\"439.82 439.82\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" r=\"70\" class=\"pencil__stroke\"></circle>\n        <g transform=\"translate(100,100)\" class=\"pencil__rotate\">\n          <g fill=\"none\">\n          <circle transform=\"rotate(-90)\" stroke-dashoffset=\"402\" stroke-dasharray=\"402.12 402.12\" stroke-width=\"30\" stroke=\"hsl(223,90%,50%)\" r=\"64\" class=\"pencil__body1\"></circle>\n          <circle transform=\"rotate(-90)\" stroke-dashoffset=\"465\" stroke-dasharray=\"464.96 464.96\" stroke-width=\"10\" stroke=\"hsl(223,90%,60%)\" r=\"74\" class=\"pencil__body2\"></circle>\n          <circle transform=\"rotate(-90)\" stroke-dashoffset=\"339\" stroke-dasharray=\"339.29 339.29\" stroke-width=\"10\" stroke=\"hsl(223,90%,40%)\" r=\"54\" class=\"pencil__body3\"></circle>\n          </g>\n          <g transform=\"rotate(-90) translate(49,0)\" class=\"pencil__eraser\">\n          <g class=\"pencil__eraser-skew\">\n            <rect height=\"30\" width=\"30\" ry=\"5\" rx=\"5\" fill=\"hsl(223,90%,70%)\"></rect>\n            <rect clip-path=\"url(#pencil-eraser)\" height=\"30\" width=\"5\" fill=\"hsl(223,90%,60%)\"></rect>\n            <rect height=\"20\" width=\"30\" fill=\"hsl(223,10%,90%)\"></rect>\n            <rect height=\"20\" width=\"15\" fill=\"hsl(223,10%,70%)\"></rect>\n            <rect height=\"20\" width=\"5\" fill=\"hsl(223,10%,80%)\"></rect>\n            <rect height=\"2\" width=\"30\" y=\"6\" fill=\"hsla(223,10%,10%,0.2)\"></rect>\n            <rect height=\"2\" width=\"30\" y=\"13\" fill=\"hsla(223,10%,10%,0.2)\"></rect>\n          </g>\n          </g>\n          <g transform=\"rotate(-90) translate(49,-30)\" class=\"pencil__point\">\n          <polygon points=\"15 0,30 30,0 30\" fill=\"hsl(33,90%,70%)\"></polygon>\n          <polygon points=\"15 0,6 30,0 30\" fill=\"hsl(33,90%,50%)\"></polygon>\n          <polygon points=\"15 0,20 10,10 10\" fill=\"hsl(223,10%,10%)\"></polygon>\n          </g>\n        </g>\n        </svg>\n      </div>\n      \n     );\n\n  \n  \n  };\n  \n\n  return (\n    <div className=\"container\">\n      <div className=\"card mb-3\" style={{ maxWidth: \"auto\" }}>\n        <div className=\"row\">\n          <div className=\"col-md-3\">\n          <ImageWithFallback\n                  inputImageUrl={data.image}\n                  fallbackImageUrl={fallbackImageUrl}\n                  className=\"card card-img-top\"\n                  style={{ marginTop: \"10px\" }} \n                  id=\"changeLeftMargin\"\n                  alt=\"book cover\"\n                />\n          </div>\n          <div className=\"col-md-8\">\n            <div className=\"card-body\">\n              <h5 id=\"s\" className=\"card-title\">{data.title}</h5>\n              <div className=\"form-group\">\n                <label htmlFor=\"\">Rating</label>\n                {console.log(data)}\n                <div className=\"\">{renderStars(data.finalRating)} {data.rating.length}</div>\n              </div>\n              <p className=\"card-text\">{data.author}</p>\n              <p className=\"card-text\">\n                <q id=\"book-description-text\">{data.description}</q>\n              </p>\n              <p className=\"card-text\">\n                <small className=\"text-body-secondary\">\n                  Published: {data.year}\n                </small>\n              </p>\n              <p className=\"card-text\">\n                <small className=\"text-body-secondary\">\n                  <cite>©️Copyright</cite>\n                </small>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );  \n}\n\nexport default ViewBook;\n","/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/components/ContentSearch.js",["118","119","120"],[],"import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport ViewBook from \"./ViewBook\";\n\nfunction ContentSearch({books}){\n\n  console.log(books)\n  return(\n    <div id=\"content\">\n      <Navbar></Navbar>\n      <style>\n      {\"#searchFormNavbar { visibility:hidden !important }\"}\n      </style>\n      {books.map((book, index)=>(\n        <div class=\"card mb-3 mx-auto my-5\" style={{border: \"none\", maxWidth: \"540px\", cursor: \"pointer\"}} onClick={() => {\n          window.location.href = `/view?BookID=${book._id}#s`;\n        }}>\n        <ViewBook BookID={book._id}> </ViewBook>\n        <style> {\"#changeLeftMargin {margin-left: 10px}\"} </style>\n      </div>\n      ))}\n\n    </div>\n  )\n}\n\nexport default ContentSearch;","/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/components/ImageWithFallback.js",["121"],[],"import React, { useState, useEffect } from 'react';\n\nconst ImageWithFallback = ({ inputImageUrl, fallbackImageUrl, ...props }) => {\n  const [imageUrl, setImageUrl] = useState(inputImageUrl);\n\n  useEffect(() => {\n    const img = new Image();\n    img.src = inputImageUrl;\n\n    img.onload = () => {\n      setImageUrl(inputImageUrl);\n    };\n\n    img.onerror = () => {\n      setImageUrl(fallbackImageUrl);\n    };\n  }, [inputImageUrl, fallbackImageUrl]);\n\n  return <img src={imageUrl} {...props} />;\n};\n\nexport default ImageWithFallback;","/Users/sarvarbekusmonov/Documents/CSC337/finalproject/9/bookish_final/src/components/HelpPage.js",[],[],{"ruleId":"122","severity":1,"message":"123","line":24,"column":24,"nodeType":"124","messageId":"125","endLine":24,"endColumn":26},{"ruleId":"126","severity":1,"message":"127","line":1,"column":25,"nodeType":"128","messageId":"129","endLine":1,"endColumn":33},{"ruleId":"122","severity":1,"message":"130","line":21,"column":29,"nodeType":"124","messageId":"125","endLine":21,"endColumn":31},{"ruleId":"122","severity":1,"message":"123","line":39,"column":27,"nodeType":"124","messageId":"125","endLine":39,"endColumn":29},{"ruleId":"126","severity":1,"message":"131","line":6,"column":10,"nodeType":"128","messageId":"129","endLine":6,"endColumn":16},{"ruleId":"126","severity":1,"message":"132","line":6,"column":18,"nodeType":"128","messageId":"129","endLine":6,"endColumn":27},{"ruleId":"133","severity":1,"message":"134","line":62,"column":6,"nodeType":"135","endLine":62,"endColumn":8,"suggestions":"136"},{"ruleId":"126","severity":1,"message":"137","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":14},{"ruleId":"133","severity":1,"message":"138","line":30,"column":6,"nodeType":"135","endLine":30,"endColumn":8,"suggestions":"139"},{"ruleId":"126","severity":1,"message":"140","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":15},{"ruleId":"133","severity":1,"message":"141","line":46,"column":6,"nodeType":"135","endLine":46,"endColumn":16,"suggestions":"142"},{"ruleId":"126","severity":1,"message":"143","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":26},{"ruleId":"126","severity":1,"message":"127","line":1,"column":28,"nodeType":"128","messageId":"129","endLine":1,"endColumn":36},{"ruleId":"126","severity":1,"message":"144","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":21},{"ruleId":"145","severity":1,"message":"146","line":19,"column":10,"nodeType":"147","endLine":19,"endColumn":43},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","Expected '!==' and instead saw '!='.","'avatar' is assigned a value but never used.","'setAvatar' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filter2'. Either include it or remove the dependency array.","ArrayExpression",["148"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'avatar'. Either include it or remove the dependency array.",["149"],"'Spinner' is defined but never used.","React Hook useEffect has a missing dependency: 'props.BookID'. Either include it or remove the dependency array.",["150"],"'useEffect' is defined but never used.","'useLocation' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [filter2]",{"range":"157","text":"158"},"Update the dependencies array to be: [avatar]",{"range":"159","text":"160"},"Update the dependencies array to be: [props.BookID, props.id]",{"range":"161","text":"162"},[1679,1681],"[filter2]",[952,954],"[avatar]",[1347,1357],"[props.BookID, props.id]"]