{"ast":null,"code":"var _jsxFileName = \"/Users/nurkhatjumabaev/Desktop/bookish_final/bookish_react/src/components/Rateandcomment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Rateandcomment() {\n  _s();\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n  const commentRef = useRef();\n  const location = useLocation();\n  const qP = new URLSearchParams(location.search);\n  const BookID = qP.get('BookID');\n  const handleStarClick = e => {\n    const newRating = parseInt(e.currentTarget.dataset.value, 10);\n    setRating(newRating);\n  };\n  const handleCommentChange = e => {\n    setComment(e.target.value);\n  };\n  async function userCheck() {\n    const response = await fetch('http://localhost:4000/currentUser', {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    alert(data);\n    if (data == null) {\n      window.location.href = '/login';\n    } else {\n      const response = await fetch(\"http://localhost:4000/rateandcomment\", {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          rating: rating,\n          comment: comment,\n          bookId: BookID,\n          userId: data\n        })\n      });\n      if (response.ok) {\n        // Handle success\n        console.log(\"Success\");\n        setRating(0);\n        setComment(\"\");\n        commentRef.current.value = \"\";\n      } else {\n        // Handle error\n        console.log(\"Error\");\n      }\n    }\n  }\n  function getData() {\n    fetch(\"http://localhost:4000/rateandcomment\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        rating: rating,\n        comment: comment,\n        bookId: BookID,\n        userId: data\n      })\n    });\n    if (response.ok) {\n      // Handle success\n      console.log(\"Success\");\n      setRating(0);\n      setComment(\"\");\n      commentRef.current.value = \"\";\n    } else {\n      // Handle error\n      console.log(\"Error\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"card-title\",\n          children: \"Rate and Comment on the Book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rating\",\n            children: Array.from({\n              length: 5\n            }, (_, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `star ${index + 1 <= rating ? \"selected\" : \"\"}`,\n              \"data-value\": index + 1,\n              onClick: handleStarClick,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: `bi ${index + 1 <= rating ? \"bi-star-fill\" : \"bi-star\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"comment\",\n              children: \"Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              id: \"comment\",\n              rows: \"3\",\n              onChange: handleCommentChange,\n              ref: commentRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            onClick: userCheck,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(Rateandcomment, \"+vbV2wI9evEeOepmcsnTbwL0eHw=\", false, function () {\n  return [useLocation];\n});\n_c = Rateandcomment;\nexport default Rateandcomment;\nvar _c;\n$RefreshReg$(_c, \"Rateandcomment\");","map":{"version":3,"names":["React","useState","useRef","useLocation","jsxDEV","_jsxDEV","Rateandcomment","_s","rating","setRating","comment","setComment","commentRef","location","qP","URLSearchParams","search","BookID","get","handleStarClick","e","newRating","parseInt","currentTarget","dataset","value","handleCommentChange","target","userCheck","response","fetch","method","credentials","headers","alert","data","window","href","body","JSON","stringify","bookId","userId","ok","console","log","current","getData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","length","_","index","onClick","htmlFor","id","rows","onChange","ref","type","_c","$RefreshReg$"],"sources":["/Users/nurkhatjumabaev/Desktop/bookish_final/bookish_react/src/components/Rateandcomment.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction Rateandcomment() {\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n  const commentRef = useRef();\n\n  const location = useLocation();\n  const qP = new URLSearchParams(location.search);\n  const BookID = qP.get('BookID');\n\n  const handleStarClick = (e) => {\n    const newRating = parseInt(e.currentTarget.dataset.value, 10);\n    setRating(newRating);\n  };\n  const handleCommentChange = (e) => {\n    setComment(e.target.value);\n  };\n\n\n    \n\n  async function userCheck(){\n    const response = await fetch('http://localhost:4000/currentUser', {\n      method: \"GET\",\n      credentials: \"include\",\n      headers:{\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  \n    \n    \n    alert(data);\n    if (data == null){\n        window.location.href = '/login';\n    }\n    else{\n      const response = await fetch(\"http://localhost:4000/rateandcomment\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ rating: rating, comment: comment, bookId: BookID, userId: data }),\n    });\n\n    if (response.ok) {\n      // Handle success\n      console.log(\"Success\");\n      setRating(0);\n      setComment(\"\");\n      commentRef.current.value = \"\";\n    } else {\n      // Handle error\n      console.log(\"Error\");\n    }\n    }\n  }\n\n\n  function getData() {\n    fetch(\"http://localhost:4000/rateandcomment\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ rating: rating, comment: comment, bookId: BookID, userId: data }),\n    })\n    \n\n    if (response.ok) {\n      // Handle success\n      console.log(\"Success\");\n      setRating(0);\n      setComment(\"\");\n      commentRef.current.value = \"\";\n    } else {\n      // Handle error\n      console.log(\"Error\");\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"card mb-3\">\n        <div className=\"card-body\">\n          <h4 className=\"card-title\">Rate and Comment on the Book</h4>\n          <form >\n            <div className=\"rating\">\n              {Array.from({ length: 5 }, (_, index) => (\n                <span\n                  key={index}\n                  className={`star ${index + 1 <= rating ? \"selected\" : \"\"}`}\n                  data-value={index + 1}\n                  onClick={handleStarClick}\n                >\n                  <i className={`bi ${index + 1 <= rating ? \"bi-star-fill\" : \"bi-star\"}`}></i>\n                </span>\n              ))}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"comment\">Comment</label>\n              <textarea\n                className=\"form-control\"\n                id=\"comment\"\n                rows=\"3\"\n                onChange={handleCommentChange}\n                ref={commentRef}\n              ></textarea>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\" onClick={userCheck}>\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Rateandcomment;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMW,UAAU,GAAGV,MAAM,EAAE;EAE3B,MAAMW,QAAQ,GAAGV,WAAW,EAAE;EAC9B,MAAMW,EAAE,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EAC/C,MAAMC,MAAM,GAAGH,EAAE,CAACI,GAAG,CAAC,QAAQ,CAAC;EAE/B,MAAMC,eAAe,GAAIC,CAAC,IAAK;IAC7B,MAAMC,SAAS,GAAGC,QAAQ,CAACF,CAAC,CAACG,aAAa,CAACC,OAAO,CAACC,KAAK,EAAE,EAAE,CAAC;IAC7DhB,SAAS,CAACY,SAAS,CAAC;EACtB,CAAC;EACD,MAAMK,mBAAmB,GAAIN,CAAC,IAAK;IACjCT,UAAU,CAACS,CAAC,CAACO,MAAM,CAACF,KAAK,CAAC;EAC5B,CAAC;EAKD,eAAeG,SAASA,CAAA,EAAE;IACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;MAChEC,MAAM,EAAE,KAAK;MACbC,WAAW,EAAE,SAAS;MACtBC,OAAO,EAAC;QACN,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAIFC,KAAK,CAACC,IAAI,CAAC;IACX,IAAIA,IAAI,IAAI,IAAI,EAAC;MACbC,MAAM,CAACvB,QAAQ,CAACwB,IAAI,GAAG,QAAQ;IACnC,CAAC,MACG;MACF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;QACrEC,MAAM,EAAE,MAAM;QACdC,WAAW,EAAE,SAAS;QACtBC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDK,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEhC,MAAM,EAAEA,MAAM;UAAEE,OAAO,EAAEA,OAAO;UAAE+B,MAAM,EAAExB,MAAM;UAAEyB,MAAM,EAAEP;QAAK,CAAC;MACzF,CAAC,CAAC;MAEF,IAAIN,QAAQ,CAACc,EAAE,EAAE;QACf;QACAC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;QACtBpC,SAAS,CAAC,CAAC,CAAC;QACZE,UAAU,CAAC,EAAE,CAAC;QACdC,UAAU,CAACkC,OAAO,CAACrB,KAAK,GAAG,EAAE;MAC/B,CAAC,MAAM;QACL;QACAmB,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACtB;IACA;EACF;EAGA,SAASE,OAAOA,CAAA,EAAG;IACjBjB,KAAK,CAAC,sCAAsC,EAAE;MAC5CC,MAAM,EAAE,MAAM;MACdC,WAAW,EAAE,SAAS;MACtBC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDK,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEhC,MAAM,EAAEA,MAAM;QAAEE,OAAO,EAAEA,OAAO;QAAE+B,MAAM,EAAExB,MAAM;QAAEyB,MAAM,EAAEP;MAAK,CAAC;IACzF,CAAC,CAAC;IAGF,IAAIN,QAAQ,CAACc,EAAE,EAAE;MACf;MACAC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MACtBpC,SAAS,CAAC,CAAC,CAAC;MACZE,UAAU,CAAC,EAAE,CAAC;MACdC,UAAU,CAACkC,OAAO,CAACrB,KAAK,GAAG,EAAE;IAC/B,CAAC,MAAM;MACL;MACAmB,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACtB;EACF;EAEA,oBACExC,OAAA;IAAK2C,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxB5C,OAAA;MAAK2C,SAAS,EAAC,WAAW;MAAAC,QAAA,eACxB5C,OAAA;QAAK2C,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxB5C,OAAA;UAAI2C,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAA4B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAC5DhD,OAAA;UAAA4C,QAAA,gBACE5C,OAAA;YAAK2C,SAAS,EAAC,QAAQ;YAAAC,QAAA,EACpBK,KAAK,CAACC,IAAI,CAAC;cAAEC,MAAM,EAAE;YAAE,CAAC,EAAE,CAACC,CAAC,EAAEC,KAAK,kBAClCrD,OAAA;cAEE2C,SAAS,EAAG,QAAOU,KAAK,GAAG,CAAC,IAAIlD,MAAM,GAAG,UAAU,GAAG,EAAG,EAAE;cAC3D,cAAYkD,KAAK,GAAG,CAAE;cACtBC,OAAO,EAAExC,eAAgB;cAAA8B,QAAA,eAEzB5C,OAAA;gBAAG2C,SAAS,EAAG,MAAKU,KAAK,GAAG,CAAC,IAAIlD,MAAM,GAAG,cAAc,GAAG,SAAU;cAAE;gBAAA0C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAK,GALvEK,KAAK;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAOb;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACE,eACNhD,OAAA;YAAK2C,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzB5C,OAAA;cAAOuD,OAAO,EAAC,SAAS;cAAAX,QAAA,EAAC;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAQ,eACxChD,OAAA;cACE2C,SAAS,EAAC,cAAc;cACxBa,EAAE,EAAC,SAAS;cACZC,IAAI,EAAC,GAAG;cACRC,QAAQ,EAAErC,mBAAoB;cAC9BsC,GAAG,EAAEpD;YAAW;cAAAsC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACR,eACNhD,OAAA;YAAQ4D,IAAI,EAAC,QAAQ;YAACjB,SAAS,EAAC,iBAAiB;YAACW,OAAO,EAAE/B,SAAU;YAAAqB,QAAA,EAAC;UAEtE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACJ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAAC9C,EAAA,CAtHQD,cAAc;EAAA,QAKJH,WAAW;AAAA;AAAA+D,EAAA,GALrB5D,cAAc;AAwHvB,eAAeA,cAAc;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}